/* 水平间距 */
/* 水平间距 */
/**
 * 辅助函数
 */
/**
 * SCSS 配置项：命名空间以及BEM
 */
/* 转换成字符串 */
/* 判断是否存在 Modifier */
/* 判断是否存在伪类 */
/**
 * 主题色切换
 * @params $theme-color 主题色
 * @params $type 变暗’dark‘ 变亮 'light'
 * @params $mix-color 自己设置的混色
 */
/**
 * 颜色结果切换， 如果开启线性渐变色 使用渐变色，如果没有开启，那么使用主题色
 * @params $open-linear 是否开启线性渐变色
 * @params $deg 渐变色角度
 * @params $theme-color 当前配色
 * @params [Array] $set 主题色明暗设置，与 $color-list 数量对应
 * @params [Array] $color-list 渐变色顺序， $color-list 和 $per-list 数量相同
 * @params [Array] $per-list 渐变色比例
 */
/**
 * UI规范基础变量
 */
/*----------------------------------------- Theme color. start ----------------------------------------*/
/* 主题颜色 */
/* 辅助色 */
/* 文字颜色（默认浅色背景下 */
/* 暗黑模式 */
/* 图形颜色 */
/*----------------------------------------- Theme color. end -------------------------------------------*/
/*-------------------------------- Theme color application size.  start --------------------------------*/
/* 文字字号 */
/* 文字字重 */
/* 尺寸 */
/*-------------------------------- Theme color application size.  end --------------------------------*/
/* action-sheet */
/* badge */
/* button */
/* cell */
/* calendar */
/* checkbox */
/* collapse */
/* divider */
/* drop-menu */
/* input-number */
/* input */
/* textarea */
/* loadmore */
/* message-box */
/* notice-bar */
/* pagination */
/* picker */
/* col-picker */
/* overlay */
/* popup */
/* progress */
/* radio */
/* search */
/* slider */
/* sort-button */
/* steps */
/* switch */
/* tabs */
/* tag */
/* toast */
/* loading */
/* tooltip */
/* popover */
/* grid-item */
/* statustip */
/* card */
/* upload */
/* curtain */
/* notify */
/* skeleton */
/* circle */
/* swiper */
/* swiper-nav */
/* segmented */
/* tabbar */
/* tabbar-item */
/* navbar */
/* navbar-capsule */
/* table */
/* sidebar */
/* sidebar-item */
/* fab */
/* count-down */
/* number-keyboard */
/* passwod-input */
/* form-item */
/* backtop */
/* index-bar */
/* text */
/* video-preview */
/* img-cropper */
/**
 * 混合宏
 */
/**
 * SCSS 配置项：命名空间以及BEM
 */
/**
 * 辅助函数
 */
/**
 * SCSS 配置项：命名空间以及BEM
 */
/* 转换成字符串 */
/* 判断是否存在 Modifier */
/* 判断是否存在伪类 */
/**
 * 主题色切换
 * @params $theme-color 主题色
 * @params $type 变暗’dark‘ 变亮 'light'
 * @params $mix-color 自己设置的混色
 */
/**
 * 颜色结果切换， 如果开启线性渐变色 使用渐变色，如果没有开启，那么使用主题色
 * @params $open-linear 是否开启线性渐变色
 * @params $deg 渐变色角度
 * @params $theme-color 当前配色
 * @params [Array] $set 主题色明暗设置，与 $color-list 数量对应
 * @params [Array] $color-list 渐变色顺序， $color-list 和 $per-list 数量相同
 * @params [Array] $per-list 渐变色比例
 */
/**
  * BEM，定义块（b)
  */
/* 定义元素（e），对于伪类，会自动将 e 嵌套在 伪类 底下 */
/* 此方法用于生成穿透样式 */
/* 定义元素（e），对于伪类，会自动将 e 嵌套在 伪类 底下 */
/* 定义状态（m） */
/* 对于需要需要嵌套在 m 底下的 e，调用这个混合宏，一般在切换整个组件的状态，如切换颜色的时候 */
/* 状态，生成 is-$state 类名 */
/**
  * 常用混合宏
  */
/* 单行超出隐藏 */
/* 多行超出隐藏 */
/* 清除浮动 */
/* 0.5px 边框 指定方向*/
/* 0.5px 边框 环绕 */
/**
  * 三角形实现尖角样式，适用于背景透明情况
  * @param $size 三角形高，底边为 $size * 2
  * @param $bg 三角形背景颜色
  */
/**
  * 正方形实现尖角样式，适用于背景不透明情况
  * @param $size 正方形边长
  * @param $bg 正方形背景颜色
  * @param $z-index z-index属性值，不得大于外部包裹器
  * @param $box-shadow 阴影
*/
.wot-theme-dark .wd-sort-button__wrapper.data-v-42f0b178 {
  color: var(--wot-dark-color, var(--wot-color-white, white));
}
.wd-sort-button.data-v-42f0b178 {
  display: inline-block;
  height: var(--wot-sort-button-height, 48px);
  line-height: var(--wot-sort-button-height, 48px);
}
.wd-sort-button--line .wd-sort-button__left.data-v-42f0b178::after {
  position: absolute;
  content: "";
  width: 19px;
  height: 3px;
  bottom: 6px;
  left: 50%;
  transform: translate(-50%, 0);
  background: var(--wot-sort-button-line-color, var(--wot-color-theme, #4d80f0));
  border-radius: calc(var(--wot-sort-button-line-height, 3px) / 2);
  transition: opacity 0.15s;
  opacity: 0;
}
.wd-sort-button--line .wd-sort-button__left.is-active.data-v-42f0b178::after {
  opacity: 1;
}
.wd-sort-button__wrapper.data-v-42f0b178 {
  font-size: var(--wot-sort-button-fs, var(--wot-fs-content, 14px));
  color: var(--wot-sort-button-color, var(--wot-color-content, #262626));
  word-break: break-all;
  white-space: nowrap;
}
.wd-sort-button__left.data-v-42f0b178 {
  position: relative;
  display: inline-block;
  vertical-align: middle;
}
.wd-sort-button__left.is-active.data-v-42f0b178 {
  font-weight: var(--wot-fw-medium, 500);
}
.wd-sort-button__left.is-active .wd-sort-button__right.data-v-42f0b178 {
  justify-content: center;
}
.wd-sort-button__right.data-v-42f0b178 {
  display: inline-block;
  min-width: 14px;
  margin-left: 2px;
  vertical-align: middle;
  line-height: 1.1;
}
.wd-sort-button__right.is-active.data-v-42f0b178 .wd-sort-button__icon-up,
.wd-sort-button__right.is-active.data-v-42f0b178 .wd-sort-button__icon-down {
  transform: scale(0.7142857143);
}
.data-v-42f0b178  .wd-sort-button__icon-up {
  display: block !important;
  line-height: 1.1;
  transform: scale(0.7142857143) translate(0, 7px);
}
.data-v-42f0b178  .wd-sort-button__icon-down {
  display: block !important;
  line-height: 1.1;
  transform: scale(0.7142857143) translate(0, -7px);
}